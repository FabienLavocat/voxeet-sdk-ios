// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import Foundation.NSURLSession;
@import ObjectiveC;
#endif

#import <VoxeetSDK/VoxeetSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSData (SWIFT_EXTENSION(VoxeetSDK))

/// Two octet checksum as defined in RFC-4880. Sum of all octets, mod 65536
- (uint16_t)checksum;
@end


@interface NSData (SWIFT_EXTENSION(VoxeetSDK))
- (NSString * _Nonnull)toHexString;
@end


@interface NSMutableData (SWIFT_EXTENSION(VoxeetSDK))
@end


@interface NSNumber (SWIFT_EXTENSION(VoxeetSDK))
@end


@interface NSURL (SWIFT_EXTENSION(VoxeetSDK))
@end


@interface NSURLComponents (SWIFT_EXTENSION(VoxeetSDK))
@end


@interface NSURLRequest (SWIFT_EXTENSION(VoxeetSDK))
@end


@interface NSURLRequest (SWIFT_EXTENSION(VoxeetSDK))
@end


@interface NSURLSession (SWIFT_EXTENSION(VoxeetSDK))
@end

@class MediaStream;
@protocol VTConferenceDelegate;
@protocol VTConferenceMediaDelegate;

SWIFT_CLASS("_TtC9VoxeetSDK12VTConference")
@interface VTConference : NSObject

/// Conference delegate.
@property (nonatomic, weak) id <VTConferenceDelegate> _Nullable delegate;
@property (nonatomic, copy) void (^ _Nullable userJoined)(NSString * _Nonnull userID, NSDictionary<NSString *, id> * _Nonnull userInfo);
@property (nonatomic, copy) void (^ _Nullable userLeft)(NSString * _Nonnull userID, NSDictionary<NSString *, id> * _Nonnull userInfo);
@property (nonatomic, copy) void (^ _Nullable messageReceived)(NSString * _Nonnull userID, NSDictionary<NSString *, id> * _Nonnull userInfo, NSString * _Nonnull message);

/// Conference media delegate.
@property (nonatomic, weak) id <VTConferenceMediaDelegate> _Nullable mediaDelegate;
@property (nonatomic, copy) void (^ _Nullable streamAdded)(MediaStream * _Nonnull stream, NSString * _Nonnull userID);
@property (nonatomic, copy) void (^ _Nullable streamRemoved)(NSString * _Nonnull userID);
@property (nonatomic, copy) void (^ _Nullable streamScreenShareAdded)(MediaStream * _Nonnull stream, NSString * _Nonnull userID);
@property (nonatomic, copy) void (^ _Nullable streamScreenShareRemoved)(NSString * _Nonnull userID);
@end


@interface VTConference (SWIFT_EXTENSION(VoxeetSDK)) <MediaAPIDelegate>
- (void)streamAddedForPeer:(NSString * _Nonnull)peerId withStream:(MediaStream * _Nonnull)mediaStream;
- (void)streamRemovedForPeer:(NSString * _Nonnull)peerId withStream:(MediaStream * _Nonnull)mediaStream;
- (void)screenShareStreamAddedForPeer:(NSString * _Nonnull)peerId withStream:(MediaStream * _Nonnull)mediaStream;
- (void)screenShareStreamRemovedForPeer:(NSString * _Nonnull)peerId withStream:(MediaStream * _Nonnull)mediaStream;
@end


@interface VTConference (SWIFT_EXTENSION(VoxeetSDK))
@end

@class VideoRenderer;

@interface VTConference (SWIFT_EXTENSION(VoxeetSDK))

/// Getting a specific user's information.
///
/// \returns  Returns all information in a <code>Dictionary
/// </code>.
- (NSDictionary<NSString *, id> * _Nonnull)getUserInfo:(NSString * _Nonnull)userID;

/// Changing the user position.
///
/// \param userID User ID.
///
/// \param angle Changes the user position with an angle.
///
/// \param distance Changes the user position with a distance.
- (void)setUserPositionWithAngle:(double)angle distance:(double)distance userID:(NSString * _Nonnull)userID;

/// Changing the user position (with just an angle, see setUserPosition(userID: String, angle: Double, distance: Double)).
///
/// \param userID User ID.
///
/// \param angle Changes the user position with an angle.
- (void)setUserAngle:(double)angle userID:(NSString * _Nonnull)userID;

/// Changing the user position (with just a distance, see setUserPosition(userID: String, angle: Double, distance: Double)).
///
/// \param userID User ID.
///
/// \param distance Changes the user position with a distance.
- (void)setUserDistance:(double)distance userID:(NSString * _Nonnull)userID;

/// Muting / Unmuting a user.
///
/// \param mute Mute or unmute a user.
///
/// \param userID User ID.
- (void)muteUser:(BOOL)mute userID:(NSString * _Nonnull)userID;

/// Checking if a user is currently muted or not.
///
/// \param userID User ID.
///
/// \returns  Return a boolean that indicates if a user is currently muted.
- (BOOL)isUserMutedWithUserID:(NSString * _Nonnull)userID;

/// Switching between BuiltInSpeaker and BuildInReceiver.
- (void)switchDeviceSpeaker;

/// Switching between BuiltInSpeaker and BuildInReceiver.
///
/// \param forceBuiltInSpeaker Forces the audio to get set on the main speaker if <code>true
/// </code>. If the value is <code>false
/// </code> the buildInReceiver will be forced.
- (void)switchDeviceSpeaker:(BOOL)forceBuiltInSpeaker;

/// Attaching a media stream to a renderer.
///
/// \param stream Stream to be rendered into the view.
///
/// \param renderer The view renderer that will display the video.
- (void)attachMediaStream:(MediaStream * _Nonnull)stream renderer:(VideoRenderer * _Nonnull)renderer;

/// Unattaching a media stream to a renderer.
///
/// \param stream Stream to be rendered into the view.
///
/// \param renderer The view renderer that will display the video.
- (void)unattachMediaStream:(MediaStream * _Nonnull)stream renderer:(VideoRenderer * _Nonnull)renderer;

/// Getting the participant's voice level.
///
/// \param userID User ID.
- (double)getVoiceLevelWithUserID:(NSString * _Nonnull)userID;

/// Flipping the device camera (front/back).
- (void)flipCamera;
@end


SWIFT_PROTOCOL("_TtP9VoxeetSDK20VTConferenceDelegate_")
@protocol VTConferenceDelegate
@optional
- (void)userJoined:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
- (void)userLeft:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
- (void)messageReceived:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo message:(NSString * _Nonnull)message;
@end


SWIFT_PROTOCOL("_TtP9VoxeetSDK25VTConferenceMediaDelegate_")
@protocol VTConferenceMediaDelegate
@optional
- (void)streamAdded:(MediaStream * _Nonnull)stream userID:(NSString * _Nonnull)userID;
- (void)streamRemoved:(NSString * _Nonnull)userID;
- (void)streamScreenShareAdded:(MediaStream * _Nonnull)stream userID:(NSString * _Nonnull)userID;
- (void)streamScreenShareRemoved:(NSString * _Nonnull)userID;
@end

#pragma clang diagnostic pop
